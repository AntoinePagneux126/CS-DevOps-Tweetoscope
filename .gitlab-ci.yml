stages :
  - test_py
  - pylint_test
  - create_docker_image


create_docker_image_job:
  stage: create_docker_image
  image: docker:latest
  services:
    - docker:dind
  script:
    - cd Docker_files
    - echo " Image build process starts ..."
    - docker build -t $CI_REGISTRY_IMAGE/gengaml -f DockerFile.Gen_GAML .
    - echo " Docker login in process ... "
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo " Login done !"
    - docker push $CI_REGISTRY_IMAGE/gengaml
    - echo " Image pushed !"

test_py_job:
  stage: test_py 
  image: python:latest
  before_script: 
    - pip install pytest pytest-cov 
    - pip install requirements.txt
  script: 
    - echo "starting test for python coverage"
    - python3 -m pytest --cov report=html --cov=Python_files /tests/
  artifacts: 
    untracked : false
    paths :
      - coverage ## correspond au nom dans la section [html] du .coveragerc
    expire_in: 60 days

pylint_test_job : 
  stage : pylint_test
  image: python:latest
  before_script : 
    - pip install pylint
    - pip install requirements.txt
  script :
    - cd Python_files
    - pylint -ry -sy *.py >> ../Rapport_Pylint/report.txt